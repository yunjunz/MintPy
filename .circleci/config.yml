version: 2.1
jobs:
  install:
    docker:
      - image: cimg/base:current
        environment:
          CONDA_PREFIX: /root/tools/miniforge
          MINTPY_HOME: /root/tools/MintPy
        user: root
    working_directory: /root/tools/MintPy
    resource_class: large

    steps:
      - checkout:
          method: blobless
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "requirements.txt" }}
            - v1-deps-
      - run:
          name: Setting Up Environment with Miniforge
          command: |
            apt update
            apt-get update --yes && apt-get upgrade --yes
            apt-get install --yes git wget
            # install miniforge (https://github.com/conda-forge/miniforge?tab=readme-ov-file#as-part-of-a-ci-pipeline)
            mkdir -p ${HOME}/tools
            cd ${HOME}/tools
            wget -O Miniforge3.sh "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"
            bash Miniforge3.sh -b -p ${HOME}/tools/miniforge
            mamba shell init
            # modify/export env var PATH to BASH_ENV to be shared across run steps
            echo 'export PATH=${CONDA_PREFIX}/bin:${PATH}' >> ${BASH_ENV}
            apt-get install python3.12-venv
            python -m venv venv
            . venv/bin/activate

      - run:
          name: Installing MintPy
          no_output_timeout: 30m
          command: |
            export PYTHONUNBUFFERED=1
            # install dependencies and source code
            mamba install --verbose --yes --file ${MINTPY_HOME}/requirements.txt gdal libgdal-netcdf
            python -m pip install ${MINTPY_HOME}
            # test installation
            smallbaselineApp.py -h
            tropo_pyaps3.py -h
            solid_earth_tides.py -h

      - save_cache:
          key: v1-deps-{{ checksum "requirements.txt" }}
          paths:
            - ./venv
            - ~/.cache/pip
      - persist_to_workspace:
          root: .
          paths:
            - venv

  unit-test:
    docker:
      - image: cimg/base:current
        environment:
          MINTPY_HOME: /root/tools/MintPy
    resource_class: large

    steps:
      - attach_workspace:
          at: .
      - run:
          name: Unit Test
          command: |
            . venv/bin/activate
            ${MINTPY_HOME}/tests/objects/euler_pole.py
            ${MINTPY_HOME}/tests/objects/ionex.py
            ${MINTPY_HOME}/tests/asc_desc2horz_vert.py
            ${MINTPY_HOME}/tests/dem_error.py

  integration-test-1:
    docker:
      - image: cimg/base:current
        environment:
          MINTPY_HOME: /root/tools/MintPy
    resource_class: large

    steps:
      - attach_workspace:
          at: .
      - run:
          name: Integration Test 1/6 - FernandinaSenDT128 (ISCE2/topsStack)
          command: |
            . venv/bin/activate
            mkdir -p ${HOME}/data
            ${MINTPY_HOME}/tests/smallbaselineApp.py --dir ${HOME}/data --dset FernandinaSenDT128

  integration-test-2:
    docker:
      - image: cimg/base:current
        environment:
          MINTPY_HOME: /root/tools/MintPy
    resource_class: large

    steps:
      - attach_workspace:
          at: .
      - run:
          name: Integration Test 2/6 - SanFranSenDT42 (ARIA)
          command: |
            . venv/bin/activate
            mkdir -p ${HOME}/data
            ${MINTPY_HOME}/tests/smallbaselineApp.py --dir ${HOME}/data --dset SanFranSenDT42

  integration-test-3:
    docker:
      - image: cimg/base:current
        environment:
          MINTPY_HOME: /root/tools/MintPy
    resource_class: large

    steps:
      - attach_workspace:
          at: .
      - run:
          name: Integration Test 3/6 - RidgecrestSenDT71 (HyP3)
          command: |
            . venv/bin/activate
            mkdir -p ${HOME}/data
            ${MINTPY_HOME}/tests/smallbaselineApp.py --dir ${HOME}/data --dset RidgecrestSenDT71

  integration-test-4:
    docker:
      - image: cimg/base:current
        environment:
          MINTPY_HOME: /root/tools/MintPy
    resource_class: large

    steps:
      - attach_workspace:
          at: .
      - run:
          name: Integration Test 4/6 - SanFranBaySenD42 (GMTSAR)
          command: |
            . venv/bin/activate
            mkdir -p ${HOME}/data
            ${MINTPY_HOME}/tests/smallbaselineApp.py --dir ${HOME}/data --dset SanFranBaySenD42

  integration-test-5:
    docker:
      - image: cimg/base:current
        environment:
          MINTPY_HOME: /root/tools/MintPy
    resource_class: large

    steps:
      - attach_workspace:
          at: .
      - run:
          name: Integration Test 5/6 - WellsEnvD2T399 (Gamma)
          command: |
            . venv/bin/activate
            mkdir -p ${HOME}/data
            ${MINTPY_HOME}/tests/smallbaselineApp.py --dir ${HOME}/data --dset WellsEnvD2T399

  integration-test-6:
    docker:
      - image: cimg/base:current
        environment:
          CONDA_PREFIX: /root/tools/miniforge
          MINTPY_HOME: /root/tools/MintPy
        user: root
    working_directory: /root/tools/MintPy
    resource_class: large

    steps:
      - checkout:
          method: blobless
      - run:
          name: Integration Test 6/6 - WCapeSenAT29 (SNAP)
          command: |
            mkdir -p ${HOME}/data
            ${MINTPY_HOME}/tests/smallbaselineApp.py --dir ${HOME}/data --dset WCapeSenAT29

workflows:
  version: 2
  unit-n-workflow-tests:
    jobs:
      - install
      - unit-test:
          requires:
            - install
      - integration-test-1:
          requires:
            - install
      - integration-test-2:
          requires:
            - install
      - integration-test-3:
          requires:
            - install
      - integration-test-4:
          requires:
            - install
      - integration-test-5:
          requires:
            - install
      - integration-test-6:
          requires:
            - install

